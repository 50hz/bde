#!/usr/bin/env python
# encoding: utf-8

from waflib import Logs, Utils
from waflib.Configure import ConfigurationContext
import pickle

top = '.'
out = 'build'

intelSources = '\
LIBRARY/src/bid64_acos.c \
LIBRARY/src/bid64_acosh.c \
LIBRARY/src/bid64_asin.c \
LIBRARY/src/bid64_asinh.c \
LIBRARY/src/bid64_atan.c \
LIBRARY/src/bid64_atan2.c \
LIBRARY/src/bid64_atanh.c \
LIBRARY/src/bid64_cbrt.c \
LIBRARY/src/bid64_cos.c \
LIBRARY/src/bid64_cosh.c \
LIBRARY/src/bid64_erf.c \
LIBRARY/src/bid64_erfc.c \
LIBRARY/src/bid64_exp.c \
LIBRARY/src/bid64_exp10.c \
LIBRARY/src/bid64_exp2.c \
LIBRARY/src/bid64_expm1.c \
LIBRARY/src/bid64_hypot.c \
LIBRARY/src/bid64_lgamma.c \
LIBRARY/src/bid64_log.c \
LIBRARY/src/bid64_log10.c \
LIBRARY/src/bid64_log1p.c \
LIBRARY/src/bid64_log2.c \
LIBRARY/src/bid64_pow.c \
LIBRARY/src/bid64_sin.c \
LIBRARY/src/bid64_sinh.c \
LIBRARY/src/bid64_tan.c \
LIBRARY/src/bid64_tanh.c \
LIBRARY/src/bid64_tgamma.c \
LIBRARY/src/bid128_acos.c \
LIBRARY/src/bid128_acosh.c \
LIBRARY/src/bid128_asin.c \
LIBRARY/src/bid128_asinh.c \
LIBRARY/src/bid128_atan.c \
LIBRARY/src/bid128_atan2.c \
LIBRARY/src/bid128_atanh.c \
LIBRARY/src/bid128_cbrt.c \
LIBRARY/src/bid128_cos.c \
LIBRARY/src/bid128_cosh.c \
LIBRARY/src/bid128_erf.c \
LIBRARY/src/bid128_erfc.c \
LIBRARY/src/bid128_exp.c \
LIBRARY/src/bid128_exp10.c \
LIBRARY/src/bid128_exp2.c \
LIBRARY/src/bid128_expm1.c \
LIBRARY/src/bid128_hypot.c \
LIBRARY/src/bid128_lgamma.c \
LIBRARY/src/bid128_log.c \
LIBRARY/src/bid128_log10.c \
LIBRARY/src/bid128_log1p.c \
LIBRARY/src/bid128_log2.c \
LIBRARY/src/bid128_pow.c \
LIBRARY/src/bid128_sin.c \
LIBRARY/src/bid128_sinh.c \
LIBRARY/src/bid128_tan.c \
LIBRARY/src/bid128_tanh.c \
LIBRARY/src/bid128_tgamma.c \
LIBRARY/src/bid32_add.c \
LIBRARY/src/bid32_compare.c \
LIBRARY/src/bid32_div.c \
LIBRARY/src/bid32_fdimd.c \
LIBRARY/src/bid32_fma.c \
LIBRARY/src/bid32_fmod.c \
LIBRARY/src/bid32_frexp.c \
LIBRARY/src/bid32_ldexp.c \
LIBRARY/src/bid32_llrintd.c \
LIBRARY/src/bid32_logb.c \
LIBRARY/src/bid32_logbd.c \
LIBRARY/src/bid32_lrintd.c \
LIBRARY/src/bid32_lround.c \
LIBRARY/src/bid32_minmax.c \
LIBRARY/src/bid32_modf.c \
LIBRARY/src/bid32_mul.c \
LIBRARY/src/bid32_nearbyintd.c \
LIBRARY/src/bid32_next.c \
LIBRARY/src/bid32_nexttowardd.c \
LIBRARY/src/bid32_noncomp.c \
LIBRARY/src/bid32_quantexpd.c \
LIBRARY/src/bid32_quantize.c \
LIBRARY/src/bid32_rem.c \
LIBRARY/src/bid32_round_integral.c \
LIBRARY/src/bid32_scalb.c \
LIBRARY/src/bid32_scalbl.c \
LIBRARY/src/bid32_sqrt.c \
LIBRARY/src/bid32_string.c \
LIBRARY/src/bid32_to_int16.c \
LIBRARY/src/bid32_to_int32.c \
LIBRARY/src/bid32_to_int64.c \
LIBRARY/src/bid32_to_int8.c \
LIBRARY/src/bid32_to_uint16.c \
LIBRARY/src/bid32_to_uint32.c \
LIBRARY/src/bid32_to_uint64.c \
LIBRARY/src/bid32_to_uint8.c \
LIBRARY/src/bid64_add.c \
LIBRARY/src/bid64_compare.c \
LIBRARY/src/bid64_div.c \
LIBRARY/src/bid64_fdimd.c \
LIBRARY/src/bid64_fma.c \
LIBRARY/src/bid64_fmod.c \
LIBRARY/src/bid64_frexp.c \
LIBRARY/src/bid64_ldexp.c \
LIBRARY/src/bid64_llrintd.c \
LIBRARY/src/bid64_logb.c \
LIBRARY/src/bid64_logbd.c \
LIBRARY/src/bid64_lrintd.c \
LIBRARY/src/bid64_lround.c \
LIBRARY/src/bid64_minmax.c \
LIBRARY/src/bid64_modf.c \
LIBRARY/src/bid64_mul.c \
LIBRARY/src/bid64_nearbyintd.c \
LIBRARY/src/bid64_next.c \
LIBRARY/src/bid64_nexttowardd.c \
LIBRARY/src/bid64_noncomp.c \
LIBRARY/src/bid64_quantexpd.c \
LIBRARY/src/bid64_quantize.c \
LIBRARY/src/bid64_rem.c \
LIBRARY/src/bid64_round_integral.c \
LIBRARY/src/bid64_scalb.c \
LIBRARY/src/bid64_scalbl.c \
LIBRARY/src/bid64_sqrt.c \
LIBRARY/src/bid64_string.c \
LIBRARY/src/bid64_to_int16.c \
LIBRARY/src/bid64_to_int32.c \
LIBRARY/src/bid64_to_int64.c \
LIBRARY/src/bid64_to_int8.c \
LIBRARY/src/bid64_to_uint16.c \
LIBRARY/src/bid64_to_uint32.c \
LIBRARY/src/bid64_to_uint64.c \
LIBRARY/src/bid64_to_uint8.c \
LIBRARY/src/bid128_add.c \
LIBRARY/src/bid128_compare.c \
LIBRARY/src/bid128_div.c \
LIBRARY/src/bid128_fdimd.c \
LIBRARY/src/bid128_fma.c \
LIBRARY/src/bid128_fmod.c \
LIBRARY/src/bid128_frexp.c \
LIBRARY/src/bid128_ldexp.c \
LIBRARY/src/bid128_llrintd.c \
LIBRARY/src/bid128_logb.c \
LIBRARY/src/bid128_logbd.c \
LIBRARY/src/bid128_lrintd.c \
LIBRARY/src/bid128_lround.c \
LIBRARY/src/bid128_minmax.c \
LIBRARY/src/bid128_modf.c \
LIBRARY/src/bid128_mul.c \
LIBRARY/src/bid128_nearbyintd.c \
LIBRARY/src/bid128_next.c \
LIBRARY/src/bid128_nexttowardd.c \
LIBRARY/src/bid128_noncomp.c \
LIBRARY/src/bid128_quantexpd.c \
LIBRARY/src/bid128_quantize.c \
LIBRARY/src/bid128_rem.c \
LIBRARY/src/bid128_round_integral.c \
LIBRARY/src/bid128_scalb.c \
LIBRARY/src/bid128_scalbl.c \
LIBRARY/src/bid128_sqrt.c \
LIBRARY/src/bid128_string.c \
LIBRARY/src/bid128_to_int16.c \
LIBRARY/src/bid128_to_int32.c \
LIBRARY/src/bid128_to_int64.c \
LIBRARY/src/bid128_to_int8.c \
LIBRARY/src/bid128_to_uint16.c \
LIBRARY/src/bid128_to_uint32.c \
LIBRARY/src/bid128_to_uint64.c \
LIBRARY/src/bid128_to_uint8.c \
LIBRARY/src/strtod32.c \
LIBRARY/src/strtod64.c \
LIBRARY/src/strtod128.c \
LIBRARY/src/wcstod32.c \
LIBRARY/src/wcstod64.c \
LIBRARY/src/wcstod128.c \
LIBRARY/src/bid32_acos.c \
LIBRARY/src/bid32_acosh.c \
LIBRARY/src/bid32_asin.c \
LIBRARY/src/bid32_asinh.c \
LIBRARY/src/bid32_atan.c \
LIBRARY/src/bid32_atan2.c \
LIBRARY/src/bid32_atanh.c \
LIBRARY/src/bid32_cbrt.c \
LIBRARY/src/bid32_cos.c \
LIBRARY/src/bid32_cosh.c \
LIBRARY/src/bid32_erf.c \
LIBRARY/src/bid32_erfc.c \
LIBRARY/src/bid32_exp.c \
LIBRARY/src/bid32_exp10.c \
LIBRARY/src/bid32_exp2.c \
LIBRARY/src/bid32_expm1.c \
LIBRARY/src/bid32_hypot.c \
LIBRARY/src/bid32_lgamma.c \
LIBRARY/src/bid32_log.c \
LIBRARY/src/bid32_log10.c \
LIBRARY/src/bid32_log1p.c \
LIBRARY/src/bid32_log2.c \
LIBRARY/src/bid32_pow.c \
LIBRARY/src/bid32_sin.c \
LIBRARY/src/bid32_sinh.c \
LIBRARY/src/bid32_tan.c \
LIBRARY/src/bid32_tanh.c \
LIBRARY/src/bid32_tgamma.c \
LIBRARY/src/bid32_sub.c \
LIBRARY/src/bid32_to_bid128.c \
LIBRARY/src/bid32_to_bid64.c \
LIBRARY/src/bid64_to_bid128.c \
LIBRARY/src/bid128_2_str_tables.c \
LIBRARY/src/bid_binarydecimal.c \
LIBRARY/src/bid_convert_data.c \
LIBRARY/src/bid_decimal_data.c \
LIBRARY/src/bid_decimal_globals.c \
LIBRARY/src/bid_dpd.c \
LIBRARY/src/bid_feclearexcept.c \
LIBRARY/src/bid_fegetexceptflag.c \
LIBRARY/src/bid_feraiseexcept.c \
LIBRARY/src/bid_fesetexceptflag.c \
LIBRARY/src/bid_fetestexcept.c \
LIBRARY/src/bid_flag_operations.c \
LIBRARY/src/bid_from_int.c \
LIBRARY/src/bid_round.c \
LIBRARY/src/bid128.c \
LIBRARY/float128/dpml_ux_bid.c \
LIBRARY/float128/dpml_ux_bessel.c \
LIBRARY/float128/dpml_ux_cbrt.c \
LIBRARY/float128/dpml_ux_erf.c \
LIBRARY/float128/dpml_ux_exp.c \
LIBRARY/float128/dpml_ux_int.c \
LIBRARY/float128/dpml_ux_inv_hyper.c \
LIBRARY/float128/dpml_ux_inv_trig.c \
LIBRARY/float128/dpml_ux_lgamma.c \
LIBRARY/float128/dpml_ux_log.c \
LIBRARY/float128/dpml_ux_mod.c \
LIBRARY/float128/dpml_ux_powi.c \
LIBRARY/float128/dpml_ux_pow.c \
LIBRARY/float128/dpml_ux_sqrt.c \
LIBRARY/float128/dpml_ux_trig.c \
LIBRARY/float128/dpml_ux_ops.c \
LIBRARY/float128/dpml_ux_ops_64.c \
LIBRARY/float128/dpml_four_over_pi.c \
LIBRARY/float128/dpml_exception.c \
LIBRARY/float128/sqrt_tab_t.c \
'


def options(opt):
    opt.load('compiler_c')

def configure(conf):
    #conf.load('compiler_c')
    os = Utils.unversioned_sys_platform()

    print "OS: " + os

    # This cpu selection code is a placeholder.

    if os == 'linux':
        cpu = conf.env["DEST_CPU"]
    elif os == 'sunos':
        cpu = 'sparc'
    elif os == 'aix':
        cpu = 'power'
    elif os == 'win32':
        cpu = 'i386'
    elif os == 'darwin':
        cpu = 'i386'
    else:
        conf.fatal("Unknown Operating System: " + os)
        
    print "CPU: "
    print cpu

    littleEndian_cpus = { "x86", "x86_64", "i386", "i486", "i586", "i686" }
    bigEndian_cpus = { 'power', 'power64', 'sparc', 'sparc64' }

    if cpu in littleEndian_cpus:
        conf.env.inteldfp_endian = "little"
        print "Little endian cpu detected"
    elif cpu in bigEndian_cpus:
        conf.env.inteldfp_endian = "big"
        print "Big endian cpu detected"
    else:
        conf.fatal("Unknown CPU architecture")

    conf.env.inteldfp_operating_system= os

    #conf.env.inteldfp_default_opts= conf.default_opts
    #conf.env.append_value('CPPFLAGS', "-D_WCHAR_T")

def build(bld):
    cppflags = ""

    first = 1
    for opt in bld.env.thirdparty_c_compiler.split():
        if first == 1:
            first = 0
            continue
        cppflags+= " " + opt

    if bld.env.inteldfp_operating_system != "win32":
        cppflags += " -Defi2"

    if bld.env.inteldfp_operating_system == "sunos" :
        cppflags += " -DSUNOS"
        cppflags += " -D__linux"
        cppflags += " -DHPUX_OS"
        cppflags += " -D__float80=double"
        cppflags += " -DBID_THREAD"
    elif bld.env.inteldfp_operating_system == "win32":
        cppflags += " -DWINNT -DWINDOWS -DWNT -Dia32"
    elif bld.env.inteldfp_operating_system == "win64":
        cppflags += " -DWINNT -DWINDOWS -DWNT"
    elif bld.env.inteldfp_operating_system == "linux" \
      or bld.env.inteldfp_operating_system == "darwin":
        cppflags += " -DLINUX"
    elif bld.env.inteldfp_operating_system == "aix":
        #cppflags += " -DSUNOS"
        cppflags += " -D__linux"
        cppflags += " -DLINUX"
        cppflags += " -DHPUX_OS"
        cppflags += " -D__QNX__"
        #cppflags += " -D__float80=double"
        cppflags += ' -D__thread='

    if bld.env.inteldfp_endian == "little":
        cppflags += " -DBID_BIG_ENDIAN=0"
    elif bld.env.inteldfp_endian == "big":
        cppflags += " -DBID_BIG_ENDIAN=1"
    else:
        bld.fatal("Unknown CPU endianness")

    for flag in bld.env["CFLAGS"]:
        cppflags += " " + flag

    for flag in bld.env["CPPFLAGS"]:
        cppflags += " " + flag

    for flag in bld.env["CXXFLAGS"]:
        cppflags += " " + flag

    
    cppflags+= " -DDECIMAL_CALL_BY_REFERENCE=0"
    cppflags+= " -DDECIMAL_GLOBAL_ROUNDING=1"
    cppflags+= " -DDECIMAL_GLOBAL_EXCEPTION_FLAGS=1"
    bld.stlib(source=intelSources,
              target='inteldfp',
              export_includes='LIBRARY/src',
              name='third-party/inteldfp_lib',
              cppflags=cppflags)

# ----------------------------------------------------------------------------
# Copyright (C) 2014 Bloomberg Finance L.P.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
# ----------------------------- END-OF-FILE ----------------------------------

